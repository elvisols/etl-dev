# Define root config
spring.cloud.stream.kafka.streams.binder.application-id=eltstream
spring.cloud.stream.kafka.streams.binder.configuration.enable.idempotence=true
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde

# oraclesource
spring.cloud.stream.bindings.oraclesource.destination=oraclesource
spring.cloud.stream.bindings.oraclesource.producer.header-mode=raw
spring.cloud.stream.bindings.oraclesource.producer.use-native-encoding=true
spring.cloud.stream.kafka.bindings.oraclesource.producer.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.cloud.stream.kafka.bindings.oraclesource.producer.configuration.key.serializer=ng.exelon.etl.serde.DtdKeySerializer
spring.cloud.stream.kafka.bindings.oraclesource.producer.configuration.value.serializer=ng.exelon.etl.serde.DtdRecordSerializer

# oraclesource
spring.cloud.stream.bindings.oraclesourcein.destination=oraclesource
#spring.cloud.stream.bindings.oraclesourcein.group=oraclesourceingrp
spring.cloud.stream.bindings.oraclesourcein.consumer.header-mode=raw
spring.cloud.stream.bindings.oraclesourcein.consumer.use-native-decoding=true
spring.cloud.stream.kafka.streams.bindings.oraclesourcein.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.oraclesourcein.consumer.value-serde=ng.exelon.etl.serde.DtdRecordSerde
#            
